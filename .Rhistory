w_write("## ntranのVARモデル", append=F, file="ntran_sum.csv")
w_write("## toutvのVARモデル", append=F, file="toutv_sum.csv")
w_write("## toutvのVARモデル", append=F)
w_write("## ntranのVARモデル", append=F, f="ntran_sum.csv")
w_write("## ntranのVARモデル", append=F, f="ntran_sum.")
knitr::opts_chunk$set(echo = TRUE)
library(RPostgreSQL)
library(tseries)
library(xts)
library(zoo)
library(knitr)
library(kableExtra)
library(vars)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv,dbname="bitcoin",host="localhost",port=5432,user="takumi",password="takumi")
options(digits=5)
options(scipen=20)
w_adf.test <- function(x) { return(suppressWarnings(adf.test(x))) }
w_kable_styling <- function(x) { return(kable_styling(x, bootstrap_options = c("striped", "hover"))) }
vm_1_aic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_1_sic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=2, type="const")
vm_2_aic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=7, type="const")
vm_2_sic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=3, type="const")
vm_3_aic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_3_sic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=3, type="const")
names <- c("VAR(8) - toutv - 1st AIC", "VAR(2) - toutv - 2nd AIC", "VAR(7) - toutv - 3rd AIC", "VAR(3) - toutv - 1st SIC", "VAR(8) - toutv - 2nd SIC", "VAR(3) - toutv - 3rd SIC")
write("## toutvのVARモデル", append=T, file="toutv_sum.csv")
sums <- list(summary(vm_1_aic)[[2]][[1]], summary(vm_2_aic)[[2]][1], summary(vm_3_aic)[[2]][1], summary(vm_1_sic)[[2]][1], summary(vm_2_sic)[[2]][1], summary(vm_3_sic)[[2]][1])
for ( i in 1:6) {
sum_out <- capture.output(sums[i])
write("#####", append=T, file="toutv_sum.csv")
write(names[[i]], append=T, file="toutv_sum.csv")
write("Call:", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Call:", sum_out) + 1]], append=T, file="toutv_sum.csv")
write("Residuals:", append=T, file="toutv_sum.csv")
write.table(as.list(summary(sum$residuals)), append=T, file="toutv_sum.csv", sep=",", row.names=F)
write("Coefficients:", append=T, file="toutv_sum.csv")
write.table(sum$coefficients, append=T, file="toutv_sum.csv", sep=",")
write("---", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Signif. codes:", sum_out)]], append=T, file="toutv_sum.csv")
write("Multiple R-squared:", append=T, file="toutv_sum.csv")
write(sum$r.squared, append=T, file="toutv_sum.csv")
write("Adjusted R-squared:", append=T, file="toutv_sum.csv")
write(sum$adj.r.squared, append=T, file="toutv_sum.csv")
write(sum_out[grep("^F-statistic:", sum_out)], append=T, file="toutv_sum.csv")
write("#####", append=T, file="toutv_sum.csv")
}
options(warn=-1)
vm_1_aic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_1_sic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=2, type="const")
vm_2_aic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=7, type="const")
vm_2_sic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=3, type="const")
vm_3_aic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_3_sic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=3, type="const")
names <- c("VAR(8) - toutv - 1st AIC", "VAR(2) - toutv - 2nd AIC", "VAR(7) - toutv - 3rd AIC", "VAR(3) - toutv - 1st SIC", "VAR(8) - toutv - 2nd SIC", "VAR(3) - toutv - 3rd SIC")
write("## toutvのVARモデル", append=T, file="toutv_sum.csv")
sums <- list(summary(vm_1_aic)[[2]][[1]], summary(vm_2_aic)[[2]][1], summary(vm_3_aic)[[2]][1], summary(vm_1_sic)[[2]][1], summary(vm_2_sic)[[2]][1], summary(vm_3_sic)[[2]][1])
for ( i in 1:6) {
sum_out <- capture.output(sums[i])
write("#####", append=T, file="toutv_sum.csv")
write(names[[i]], append=T, file="toutv_sum.csv")
write("Call:", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Call:", sum_out) + 1]], append=T, file="toutv_sum.csv")
write("Residuals:", append=T, file="toutv_sum.csv")
write.table(as.list(summary(sum$residuals)), append=T, file="toutv_sum.csv", sep=",", row.names=F)
write("Coefficients:", append=T, file="toutv_sum.csv")
write.table(sum$coefficients, append=T, file="toutv_sum.csv", sep=",")
write("---", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Signif. codes:", sum_out)]], append=T, file="toutv_sum.csv")
write("Multiple R-squared:", append=T, file="toutv_sum.csv")
write(sum$r.squared, append=T, file="toutv_sum.csv")
write("Adjusted R-squared:", append=T, file="toutv_sum.csv")
write(sum$adj.r.squared, append=T, file="toutv_sum.csv")
write(sum_out[grep("^F-statistic:", sum_out)], append=T, file="toutv_sum.csv")
write("#####", append=T, file="toutv_sum.csv")
}
vm_1_aic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_1_sic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=2, type="const")
vm_2_aic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=7, type="const")
vm_2_sic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=3, type="const")
vm_3_aic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_3_sic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=3, type="const")
names <- c("VAR(8) - toutv - 1st AIC", "VAR(2) - toutv - 2nd AIC", "VAR(7) - toutv - 3rd AIC", "VAR(3) - toutv - 1st SIC", "VAR(8) - toutv - 2nd SIC", "VAR(3) - toutv - 3rd SIC")
write("## toutvのVARモデル", append=T, file="toutv_sum.csv")
sums <- list(summary(vm_1_aic)[[2]][[1]], summary(vm_2_aic)[[2]][1], summary(vm_3_aic)[[2]][1], summary(vm_1_sic)[[2]][1], summary(vm_2_sic)[[2]][1], summary(vm_3_sic)[[2]][1])
options(warn=-1)
for ( i in 1:6) {
sum_out <- capture.output(sums[i])
write("#####", append=T, file="toutv_sum.csv")
write(names[[i]], append=T, file="toutv_sum.csv")
write("Call:", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Call:", sum_out) + 1]], append=T, file="toutv_sum.csv")
write("Residuals:", append=T, file="toutv_sum.csv")
write.table(as.list(summary(sum$residuals)), append=T, file="toutv_sum.csv", sep=",", row.names=F)
write("Coefficients:", append=T, file="toutv_sum.csv")
write.table(sum$coefficients, append=T, file="toutv_sum.csv", sep=",")
write("---", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Signif. codes:", sum_out)]], append=T, file="toutv_sum.csv")
write("Multiple R-squared:", append=T, file="toutv_sum.csv")
write(sum$r.squared, append=T, file="toutv_sum.csv")
write("Adjusted R-squared:", append=T, file="toutv_sum.csv")
write(sum$adj.r.squared, append=T, file="toutv_sum.csv")
write(sum_out[grep("^F-statistic:", sum_out)], append=T, file="toutv_sum.csv")
write("#####", append=T, file="toutv_sum.csv")
}
vm_1_aic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_1_sic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=2, type="const")
vm_2_aic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=7, type="const")
vm_2_sic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=3, type="const")
vm_3_aic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_3_sic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=3, type="const")
options(warn=-1)
names <- c("VAR(8) - toutv - 1st AIC", "VAR(2) - toutv - 2nd AIC", "VAR(7) - toutv - 3rd AIC", "VAR(3) - toutv - 1st SIC", "VAR(8) - toutv - 2nd SIC", "VAR(3) - toutv - 3rd SIC")
write("## toutvのVARモデル", append=T, file="toutv_sum.csv")
sums <- list(summary(vm_1_aic)[[2]][[1]], summary(vm_2_aic)[[2]][1], summary(vm_3_aic)[[2]][1], summary(vm_1_sic)[[2]][1], summary(vm_2_sic)[[2]][1], summary(vm_3_sic)[[2]][1])
for ( i in 1:6) {
sum_out <- capture.output(sums[i])
write("#####", append=T, file="toutv_sum.csv")
write(names[[i]], append=T, file="toutv_sum.csv")
write("Call:", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Call:", sum_out) + 1]], append=T, file="toutv_sum.csv")
write("Residuals:", append=T, file="toutv_sum.csv")
write.table(as.list(summary(sum$residuals)), append=T, file="toutv_sum.csv", sep=",", row.names=F)
write("Coefficients:", append=T, file="toutv_sum.csv")
write.table(sum$coefficients, append=T, file="toutv_sum.csv", sep=",")
write("---", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Signif. codes:", sum_out)]], append=T, file="toutv_sum.csv")
write("Multiple R-squared:", append=T, file="toutv_sum.csv")
write(sum$r.squared, append=T, file="toutv_sum.csv")
write("Adjusted R-squared:", append=T, file="toutv_sum.csv")
write(sum$adj.r.squared, append=T, file="toutv_sum.csv")
write(sum_out[grep("^F-statistic:", sum_out)], append=T, file="toutv_sum.csv")
write("#####", append=T, file="toutv_sum.csv")
}
knitr::opts_chunk$set(echo = TRUE)
library(RPostgreSQL)
library(tseries)
library(xts)
library(zoo)
library(knitr)
library(kableExtra)
library(vars)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv,dbname="bitcoin",host="localhost",port=5432,user="takumi",password="takumi")
options(digits=5)
options(scipen=20)
w_adf.test <- function(x) { return(suppressWarnings(adf.test(x))) }
w_kable_styling <- function(x) { return(kable_styling(x, bootstrap_options = c("striped", "hover"))) }
vm_1_aic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_1_sic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=2, type="const")
vm_2_aic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=7, type="const")
vm_2_sic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=3, type="const")
vm_3_aic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_3_sic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=3, type="const")
names <- c("VAR(8) - toutv - 1st AIC", "VAR(2) - toutv - 2nd AIC", "VAR(7) - toutv - 3rd AIC", "VAR(3) - toutv - 1st SIC", "VAR(8) - toutv - 2nd SIC", "VAR(3) - toutv - 3rd SIC")
write("## toutvのVARモデル", file="toutv_sum.csv")
sums <- list(summary(vm_1_aic)[[2]][[1]], summary(vm_2_aic)[[2]][1], summary(vm_3_aic)[[2]][1], summary(vm_1_sic)[[2]][1], summary(vm_2_sic)[[2]][1], summary(vm_3_sic)[[2]][1])
for ( i in 1:6) {
sum_out <- capture.output(sums[i])
write("#####", append=T, file="toutv_sum.csv")
write(names[[i]], append=T, file="toutv_sum.csv")
write("Call:", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Call:", sum_out) + 1]], append=T, file="toutv_sum.csv")
write("Residuals:", append=T, file="toutv_sum.csv")
write.table(as.list(summary(sum$residuals)), append=T, file="toutv_sum.csv", sep=",", row.names=F)
write("Coefficients:", append=T, file="toutv_sum.csv")
write.table(sum$coefficients, append=T, file="toutv_sum.csv", sep=",")
write("---", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Signif. codes:", sum_out)]], append=T, file="toutv_sum.csv")
write("Multiple R-squared:", append=T, file="toutv_sum.csv")
write(sum$r.squared, append=T, file="toutv_sum.csv")
write("Adjusted R-squared:", append=T, file="toutv_sum.csv")
write(sum$adj.r.squared, append=T, file="toutv_sum.csv")
write(sum_out[grep("^F-statistic:", sum_out)], append=T, file="toutv_sum.csv")
write("#####", append=T, file="toutv_sum.csv")
}
vm_1_aic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_1_sic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(6,2,7:10,12:13,16)])), p=2, type="const")
vm_2_aic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=7, type="const")
vm_2_sic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(6,2,7:10,12:13,16)])), p=3, type="const")
vm_3_aic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=8, type="const")
vm_3_sic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(6,2,7:10,12:13,16)])), p=3, type="const")
names <- c("VAR(8) - toutv - 1st AIC", "VAR(2) - toutv - 2nd AIC", "VAR(7) - toutv - 3rd AIC", "VAR(3) - toutv - 1st SIC", "VAR(8) - toutv - 2nd SIC", "VAR(3) - toutv - 3rd SIC")
write("## toutvのVARモデル", file="toutv_sum.csv")
sums <- list(summary(vm_1_aic)[[2]][[1]], summary(vm_2_aic)[[2]][1], summary(vm_3_aic)[[2]][1], summary(vm_1_sic)[[2]][1], summary(vm_2_sic)[[2]][1], summary(vm_3_sic)[[2]][1])
for ( i in 1:6) {
sum_out <- capture.output(sums[i])
write("#####", append=T, file="toutv_sum.csv")
write(names[[i]], append=T, file="toutv_sum.csv")
write("Call:", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Call:", sum_out) + 1]], append=T, file="toutv_sum.csv")
write("Residuals:", append=T, file="toutv_sum.csv")
write.table(as.list(summary(sum$residuals)), append=T, file="toutv_sum.csv", sep=",", row.names=F)
write("Coefficients:", append=T, file="toutv_sum.csv")
write.table(sum$coefficients, append=T, file="toutv_sum.csv", sep=",")
write("---", append=T, file="toutv_sum.csv")
write(sum_out[[grep("^Signif. codes:", sum_out)]], append=T, file="toutv_sum.csv")
write("Multiple R-squared:", append=T, file="toutv_sum.csv")
write(sum$r.squared, append=T, file="toutv_sum.csv")
write("Adjusted R-squared:", append=T, file="toutv_sum.csv")
write(sum$adj.r.squared, append=T, file="toutv_sum.csv")
write(sum_out[grep("^F-statistic:", sum_out)], append=T, file="toutv_sum.csv")
write("#####", append=T, file="toutv_sum.csv")
}
knitr::opts_chunk$set(echo = TRUE)
library(RPostgreSQL)
library(tseries)
library(xts)
library(zoo)
library(knitr)
library(kableExtra)
library(vars)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv,dbname="bitcoin",host="localhost",port=5432,user="takumi",password="takumi")
options(digits=5)
options(scipen=20)
w_kable_styling <- function(x) { return(kable_styling(x, bootstrap_options = c("striped", "hover"))) }
bc_mean_1 <- apply(bc[bc$phase==1,2:15], 2, mean, na.rm=TRUE)
bc_mean_2 <- apply(bc[bc$phase==2,2:15], 2, mean, na.rm=TRUE)
bc_mean_3 <- apply(bc[bc$phase==3,2:15], 2, mean, na.rm=TRUE)
bcd_mean_1 <- apply(bcd[bcd$phase==1,2:15], 2, mean, na.rm=TRUE)
bcd_mean_2 <- apply(bcd[bcd$phase==2,2:15], 2, mean, na.rm=TRUE)
bcd_mean_3 <- apply(bcd[bcd$phase==3,2:15], 2, mean, na.rm=TRUE)
mean_table <- data.frame(BC_1=bc_mean_1, BC_2=bc_mean_2, BC_3=bc_mean_3, BCD_1=bcd_mean_1, BCD_2=bcd_mean_2, BCD_3=bcd_mean_3)
write.table(mean_table, "mean_table.csv", sep=",")
w_kable_styling(kable(mean_table, caption="Mean"))
plot(bc$date, bc$ntran, type="l", main="Total Number of Transactions Per Day")
abline(v=c(as.POSIXct("2012-11-28"), as.POSIXct("2016-07-09")), col="red")
plot(bcd$date, bcd$dntran, type="l", main="DELTA Total Number of Transactions Per Day")
abline(v=c(as.POSIXct("2012-11-28"), as.POSIXct("2016-07-09")), col="red")
acf(bc[bc$phase==1,]$ntran, lag.max=30)
acf(bc[bc$phase==2,]$ntran, lag.max=30)
acf(bc[bc$phase==3,]$ntran, lag.max=30)
acf(bcd[bcd$phase==1,]$dntran, lag.max=30)
acf(bcd[bcd$phase==2,]$dntran, lag.max=30)
acf(bcd[bcd$phase==3,]$dntran, lag.max=30)
stats_1 <- c(); for (i in 1:10) stats_1 <- append(stats_1, Box.test(bc[bc$phase==1,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_1) <- 1:10
stats_2 <- c(); for (i in 1:10) stats_2 <- append(stats_2, Box.test(bc[bc$phase==2,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_2) <- 1:10
stats_3 <- c(); for (i in 1:10) stats_3 <- append(stats_3, Box.test(bc[bc$phase==3,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_3) <- 1:10
pv_1 <- c(); for (i in 1:10) pv_1 <- append(pv_1, Box.test(bc[bc$phase==1,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_1) <- 1:10
pv_2 <- c(); for (i in 1:10) pv_2 <- append(pv_2, Box.test(bc[bc$phase==2,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_2) <- 1:10
pv_3 <- c(); for (i in 1:10) pv_3 <- append(pv_3, Box.test(bc[bc$phase==3,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_3) <- 1:10
ljung_box <- t(data.frame("Qm_1"=stats_1, "p-value_1"=pv_1, "Qm_2"=stats_2, "p-value_2"=pv_2,"Qm_3"=stats_3, "p-value_3"=pv_3))
w_kable_styling(kable(ljung_box, caption="Ljung-Box"))
stats_1 <- c(); for (i in 1:10) stats_1 <- append(stats_1, Box.test(bcd[bcd$phase==1,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_1) <- 1:10
stats_2 <- c(); for (i in 1:10) stats_2 <- append(stats_2, Box.test(bcd[bcd$phase==2,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_2) <- 1:10
stats_3 <- c(); for (i in 1:10) stats_3 <- append(stats_3, Box.test(bcd[bcd$phase==3,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_3) <- 1:10
pv_1 <- c(); for (i in 1:10) pv_1 <- append(pv_1, Box.test(bcd[bcd$phase==1,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_1) <- 1:10
pv_2 <- c(); for (i in 1:10) pv_2 <- append(pv_2, Box.test(bcd[bcd$phase==2,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_2) <- 1:10
pv_3 <- c(); for (i in 1:10) pv_3 <- append(pv_3, Box.test(bcd[bcd$phase==3,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_3) <- 1:10
ljung_box <- t(data.frame("Qm_1"=stats_1, "p-value_1"=pv_1, "Qm_2"=stats_2, "p-value_2"=pv_2,"Qm_3"=stats_3, "p-value_3"=pv_3))
w_kable_styling(kable(ljung_box, caption="Ljung-Box"))
stats_1 <- c(adf.test(bc[bc$phase==1,]$ntran)[[1]], adf.test(bcd[bcd$phase==1,]$dntran)[[1]])
names(stats_1) <- c("RAW", "DIFF")
stats_2 <- c(adf.test(bc[bc$phase==2,]$ntran)[[1]], adf.test(bcd[bcd$phase==2,]$dntran)[[1]])
names(stats_2) <- c("RAW", "DIFF")
stats_3 <- c(adf.test(bc[bc$phase==3,]$ntran)[[1]], adf.test(bcd[bcd$phase==3,]$dntran)[[1]])
names(stats_3) <- c("RAW", "DIFF")
pv_1 <- c(adf.test(bc[bc$phase==1,]$ntran)[[4]], adf.test(bcd[bcd$phase==1,]$dntran)[[4]])
names(pv_1) <- c("RAW", "DIFF")
pv_2 <- c(adf.test(bc[bc$phase==2,]$ntran)[[4]], adf.test(bcd[bcd$phase==2,]$dntran)[[4]])
names(pv_2) <- c("RAW", "DIFF")
pv_3 <- c(adf.test(bc[bc$phase==3,]$ntran)[[4]], adf.test(bcd[bcd$phase==3,]$dntran)[[4]])
names(pv_3) <- c("RAW", "DIFF")
a_dicky_fuller <- t(data.frame("DF_1"=stats_1, "p-value_1"=pv_1, "DF_2"=stats_2, "p-value_2"=pv_2, "DF_3"=stats_3, "p-value_3"=pv_3))
w_kable_styling(kable(a_dicky_fuller, caption="ADF-test"))
plot(bc$date, bc$ntran, type="l", main="Total Number of Transactions Per Day")
abline(v=c(as.POSIXct("2012-11-28"), as.POSIXct("2016-07-09")), col="red")
plot(bcd$date, bcd$dntran, type="l", main="DELTA Total Number of Transactions Per Day")
abline(v=c(as.POSIXct("2012-11-28"), as.POSIXct("2016-07-09")), col="red")
acf(bc[bc$phase==1,]$ntran, lag.max=30)
acf(bc[bc$phase==2,]$ntran, lag.max=30)
acf(bc[bc$phase==3,]$ntran, lag.max=30)
acf(bcd[bcd$phase==1,]$dntran, lag.max=30)
acf(bcd[bcd$phase==2,]$dntran, lag.max=30)
acf(bcd[bcd$phase==3,]$dntran, lag.max=30)
stats_1 <- c(); for (i in 1:10) stats_1 <- append(stats_1, Box.test(bc[bc$phase==1,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_1) <- 1:10
stats_2 <- c(); for (i in 1:10) stats_2 <- append(stats_2, Box.test(bc[bc$phase==2,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_2) <- 1:10
stats_3 <- c(); for (i in 1:10) stats_3 <- append(stats_3, Box.test(bc[bc$phase==3,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_3) <- 1:10
pv_1 <- c(); for (i in 1:10) pv_1 <- append(pv_1, Box.test(bc[bc$phase==1,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_1) <- 1:10
pv_2 <- c(); for (i in 1:10) pv_2 <- append(pv_2, Box.test(bc[bc$phase==2,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_2) <- 1:10
pv_3 <- c(); for (i in 1:10) pv_3 <- append(pv_3, Box.test(bc[bc$phase==3,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_3) <- 1:10
ljung_box <- t(data.frame("Qm_1"=stats_1, "p-value_1"=pv_1, "Qm_2"=stats_2, "p-value_2"=pv_2,"Qm_3"=stats_3, "p-value_3"=pv_3))
w_kable_styling(kable(ljung_box, caption="Ljung-Box RAW"))
stats_1 <- c(); for (i in 1:10) stats_1 <- append(stats_1, Box.test(bcd[bcd$phase==1,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_1) <- 1:10
stats_2 <- c(); for (i in 1:10) stats_2 <- append(stats_2, Box.test(bcd[bcd$phase==2,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_2) <- 1:10
stats_3 <- c(); for (i in 1:10) stats_3 <- append(stats_3, Box.test(bcd[bcd$phase==3,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_3) <- 1:10
pv_1 <- c(); for (i in 1:10) pv_1 <- append(pv_1, Box.test(bcd[bcd$phase==1,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_1) <- 1:10
pv_2 <- c(); for (i in 1:10) pv_2 <- append(pv_2, Box.test(bcd[bcd$phase==2,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_2) <- 1:10
pv_3 <- c(); for (i in 1:10) pv_3 <- append(pv_3, Box.test(bcd[bcd$phase==3,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_3) <- 1:10
ljung_box <- t(data.frame("Qm_1"=stats_1, "p-value_1"=pv_1, "Qm_2"=stats_2, "p-value_2"=pv_2,"Qm_3"=stats_3, "p-value_3"=pv_3))
w_kable_styling(kable(ljung_box, caption="Ljung-Box DIFF"))
stats_1 <- c(adf.test(bc[bc$phase==1,]$ntran)[[1]], adf.test(bcd[bcd$phase==1,]$dntran)[[1]])
names(stats_1) <- c("RAW", "DIFF")
stats_2 <- c(adf.test(bc[bc$phase==2,]$ntran)[[1]], adf.test(bcd[bcd$phase==2,]$dntran)[[1]])
names(stats_2) <- c("RAW", "DIFF")
stats_3 <- c(adf.test(bc[bc$phase==3,]$ntran)[[1]], adf.test(bcd[bcd$phase==3,]$dntran)[[1]])
names(stats_3) <- c("RAW", "DIFF")
pv_1 <- c(adf.test(bc[bc$phase==1,]$ntran)[[4]], adf.test(bcd[bcd$phase==1,]$dntran)[[4]])
names(pv_1) <- c("RAW", "DIFF")
pv_2 <- c(adf.test(bc[bc$phase==2,]$ntran)[[4]], adf.test(bcd[bcd$phase==2,]$dntran)[[4]])
names(pv_2) <- c("RAW", "DIFF")
pv_3 <- c(adf.test(bc[bc$phase==3,]$ntran)[[4]], adf.test(bcd[bcd$phase==3,]$dntran)[[4]])
names(pv_3) <- c("RAW", "DIFF")
a_dicky_fuller <- t(data.frame("DF_1"=stats_1, "p-value_1"=pv_1, "DF_2"=stats_2, "p-value_2"=pv_2, "DF_3"=stats_3, "p-value_3"=pv_3))
w_kable_styling(kable(a_dicky_fuller, caption="ADF-test"))
plot(bc$date, bc$ntran, type="l", main="Total Number of Transactions Per Day")
abline(v=c(as.POSIXct("2012-11-28"), as.POSIXct("2016-07-09")), col="red")
plot(bcd$date, bcd$dntran, type="l", main="DELTA Total Number of Transactions Per Day")
abline(v=c(as.POSIXct("2012-11-28"), as.POSIXct("2016-07-09")), col="red")
acf(bc[bc$phase==1,]$ntran, lag.max=30)
acf(bc[bc$phase==2,]$ntran, lag.max=30)
acf(bc[bc$phase==3,]$ntran, lag.max=30)
acf(bcd[bcd$phase==1,]$dntran, lag.max=30)
acf(bcd[bcd$phase==2,]$dntran, lag.max=30)
acf(bcd[bcd$phase==3,]$dntran, lag.max=30)
stats_1 <- c(); for (i in 1:10) stats_1 <- append(stats_1, Box.test(bc[bc$phase==1,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_1) <- 1:10
stats_2 <- c(); for (i in 1:10) stats_2 <- append(stats_2, Box.test(bc[bc$phase==2,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_2) <- 1:10
stats_3 <- c(); for (i in 1:10) stats_3 <- append(stats_3, Box.test(bc[bc$phase==3,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_3) <- 1:10
pv_1 <- c(); for (i in 1:10) pv_1 <- append(pv_1, Box.test(bc[bc$phase==1,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_1) <- 1:10
pv_2 <- c(); for (i in 1:10) pv_2 <- append(pv_2, Box.test(bc[bc$phase==2,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_2) <- 1:10
pv_3 <- c(); for (i in 1:10) pv_3 <- append(pv_3, Box.test(bc[bc$phase==3,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_3) <- 1:10
ljung_box_raw <- t(data.frame("Qm_1"=stats_1, "p-value_1"=pv_1, "Qm_2"=stats_2, "p-value_2"=pv_2,"Qm_3"=stats_3, "p-value_3"=pv_3))
stats_1 <- c(); for (i in 1:10) stats_1 <- append(stats_1, Box.test(bcd[bcd$phase==1,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_1) <- 1:10
stats_2 <- c(); for (i in 1:10) stats_2 <- append(stats_2, Box.test(bcd[bcd$phase==2,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_2) <- 1:10
stats_3 <- c(); for (i in 1:10) stats_3 <- append(stats_3, Box.test(bcd[bcd$phase==3,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_3) <- 1:10
pv_1 <- c(); for (i in 1:10) pv_1 <- append(pv_1, Box.test(bcd[bcd$phase==1,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_1) <- 1:10
pv_2 <- c(); for (i in 1:10) pv_2 <- append(pv_2, Box.test(bcd[bcd$phase==2,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_2) <- 1:10
pv_3 <- c(); for (i in 1:10) pv_3 <- append(pv_3, Box.test(bcd[bcd$phase==3,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_3) <- 1:10
ljung_box_diff <- t(data.frame("Qm_1"=stats_1, "p-value_1"=pv_1, "Qm_2"=stats_2, "p-value_2"=pv_2,"Qm_3"=stats_3, "p-value_3"=pv_3))
w_kable_styling(kable(ljung_box, caption="Ljung-Box DIFF"))
stats_1 <- c(adf.test(bc[bc$phase==1,]$ntran)[[1]], adf.test(bcd[bcd$phase==1,]$dntran)[[1]])
names(stats_1) <- c("RAW", "DIFF")
stats_2 <- c(adf.test(bc[bc$phase==2,]$ntran)[[1]], adf.test(bcd[bcd$phase==2,]$dntran)[[1]])
names(stats_2) <- c("RAW", "DIFF")
stats_3 <- c(adf.test(bc[bc$phase==3,]$ntran)[[1]], adf.test(bcd[bcd$phase==3,]$dntran)[[1]])
names(stats_3) <- c("RAW", "DIFF")
pv_1 <- c(adf.test(bc[bc$phase==1,]$ntran)[[4]], adf.test(bcd[bcd$phase==1,]$dntran)[[4]])
names(pv_1) <- c("RAW", "DIFF")
pv_2 <- c(adf.test(bc[bc$phase==2,]$ntran)[[4]], adf.test(bcd[bcd$phase==2,]$dntran)[[4]])
names(pv_2) <- c("RAW", "DIFF")
pv_3 <- c(adf.test(bc[bc$phase==3,]$ntran)[[4]], adf.test(bcd[bcd$phase==3,]$dntran)[[4]])
names(pv_3) <- c("RAW", "DIFF")
a_dicky_fuller <- t(data.frame("DF_1"=stats_1, "p-value_1"=pv_1, "DF_2"=stats_2, "p-value_2"=pv_2, "DF_3"=stats_3, "p-value_3"=pv_3))
w_kable_styling(kable(a_dicky_fuller, caption="ADF-test"))
plot(bc$date, bc$ntran, type="l", main="Total Number of Transactions Per Day")
abline(v=c(as.POSIXct("2012-11-28"), as.POSIXct("2016-07-09")), col="red")
plot(bcd$date, bcd$dntran, type="l", main="DELTA Total Number of Transactions Per Day")
abline(v=c(as.POSIXct("2012-11-28"), as.POSIXct("2016-07-09")), col="red")
acf(bc[bc$phase==1,]$ntran, lag.max=30)
acf(bc[bc$phase==2,]$ntran, lag.max=30)
acf(bc[bc$phase==3,]$ntran, lag.max=30)
acf(bcd[bcd$phase==1,]$dntran, lag.max=30)
acf(bcd[bcd$phase==2,]$dntran, lag.max=30)
acf(bcd[bcd$phase==3,]$dntran, lag.max=30)
stats_1 <- c(); for (i in 1:10) stats_1 <- append(stats_1, Box.test(bc[bc$phase==1,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_1) <- 1:10
stats_2 <- c(); for (i in 1:10) stats_2 <- append(stats_2, Box.test(bc[bc$phase==2,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_2) <- 1:10
stats_3 <- c(); for (i in 1:10) stats_3 <- append(stats_3, Box.test(bc[bc$phase==3,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_3) <- 1:10
pv_1 <- c(); for (i in 1:10) pv_1 <- append(pv_1, Box.test(bc[bc$phase==1,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_1) <- 1:10
pv_2 <- c(); for (i in 1:10) pv_2 <- append(pv_2, Box.test(bc[bc$phase==2,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_2) <- 1:10
pv_3 <- c(); for (i in 1:10) pv_3 <- append(pv_3, Box.test(bc[bc$phase==3,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_3) <- 1:10
ljung_box_raw <- t(data.frame("RAW_Qm_1"=stats_1, "RAW_p-value_1"=pv_1, "RAW_Qm_2"=stats_2, "RAW_p-value_2"=pv_2,"RAW_Qm_3"=stats_3, "RAW_p-value_3"=pv_3))
stats_1 <- c(); for (i in 1:10) stats_1 <- append(stats_1, Box.test(bcd[bcd$phase==1,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_1) <- 1:10
stats_2 <- c(); for (i in 1:10) stats_2 <- append(stats_2, Box.test(bcd[bcd$phase==2,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_2) <- 1:10
stats_3 <- c(); for (i in 1:10) stats_3 <- append(stats_3, Box.test(bcd[bcd$phase==3,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_3) <- 1:10
pv_1 <- c(); for (i in 1:10) pv_1 <- append(pv_1, Box.test(bcd[bcd$phase==1,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_1) <- 1:10
pv_2 <- c(); for (i in 1:10) pv_2 <- append(pv_2, Box.test(bcd[bcd$phase==2,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_2) <- 1:10
pv_3 <- c(); for (i in 1:10) pv_3 <- append(pv_3, Box.test(bcd[bcd$phase==3,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_3) <- 1:10
ljung_box_diff <- t(data.frame("DIFF_Qm_1"=stats_1, "DIFF_p-value_1"=pv_1, "DIFF_Qm_2"=stats_2, "DIFF_p-value_2"=pv_2, "DIFF_Qm_3"=stats_3, "DIFF_p-value_3"=pv_3))
w_kable_styling(kable(rbind(ljung_box_raw,ljung_box_diff), caption="Ljung-Box"))
stats_1 <- c(adf.test(bc[bc$phase==1,]$ntran)[[1]], adf.test(bcd[bcd$phase==1,]$dntran)[[1]])
names(stats_1) <- c("RAW", "DIFF")
stats_2 <- c(adf.test(bc[bc$phase==2,]$ntran)[[1]], adf.test(bcd[bcd$phase==2,]$dntran)[[1]])
names(stats_2) <- c("RAW", "DIFF")
stats_3 <- c(adf.test(bc[bc$phase==3,]$ntran)[[1]], adf.test(bcd[bcd$phase==3,]$dntran)[[1]])
names(stats_3) <- c("RAW", "DIFF")
pv_1 <- c(adf.test(bc[bc$phase==1,]$ntran)[[4]], adf.test(bcd[bcd$phase==1,]$dntran)[[4]])
names(pv_1) <- c("RAW", "DIFF")
pv_2 <- c(adf.test(bc[bc$phase==2,]$ntran)[[4]], adf.test(bcd[bcd$phase==2,]$dntran)[[4]])
names(pv_2) <- c("RAW", "DIFF")
pv_3 <- c(adf.test(bc[bc$phase==3,]$ntran)[[4]], adf.test(bcd[bcd$phase==3,]$dntran)[[4]])
names(pv_3) <- c("RAW", "DIFF")
a_dicky_fuller <- t(data.frame("DF_1"=stats_1, "p-value_1"=pv_1, "DF_2"=stats_2, "p-value_2"=pv_2, "DF_3"=stats_3, "p-value_3"=pv_3))
w_kable_styling(kable(a_dicky_fuller, caption="ADF-test"))
plot(bc$date, bc$ntran, type="l", main="Total Number of Transactions Per Day")
abline(v=c(as.POSIXct("2012-11-28"), as.POSIXct("2016-07-09")), col="red")
plot(bcd$date, bcd$dntran, type="l", main="DELTA Total Number of Transactions Per Day")
abline(v=c(as.POSIXct("2012-11-28"), as.POSIXct("2016-07-09")), col="red")
acf(bc[bc$phase==1,]$ntran, lag.max=30)
acf(bc[bc$phase==2,]$ntran, lag.max=30)
acf(bc[bc$phase==3,]$ntran, lag.max=30)
acf(bcd[bcd$phase==1,]$dntran, lag.max=30)
acf(bcd[bcd$phase==2,]$dntran, lag.max=30)
acf(bcd[bcd$phase==3,]$dntran, lag.max=30)
stats_1 <- c(); for (i in 1:10) stats_1 <- append(stats_1, Box.test(bc[bc$phase==1,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_1) <- 1:10
stats_2 <- c(); for (i in 1:10) stats_2 <- append(stats_2, Box.test(bc[bc$phase==2,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_2) <- 1:10
stats_3 <- c(); for (i in 1:10) stats_3 <- append(stats_3, Box.test(bc[bc$phase==3,]$ntran, lag=i, type="Ljung-Box")[[1]])
names(stats_3) <- 1:10
pv_1 <- c(); for (i in 1:10) pv_1 <- append(pv_1, Box.test(bc[bc$phase==1,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_1) <- 1:10
pv_2 <- c(); for (i in 1:10) pv_2 <- append(pv_2, Box.test(bc[bc$phase==2,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_2) <- 1:10
pv_3 <- c(); for (i in 1:10) pv_3 <- append(pv_3, Box.test(bc[bc$phase==3,]$ntran, lag=100, type="Ljung-Box")[[3]])
names(pv_3) <- 1:10
ljung_box_raw <- t(data.frame("RAW_Qm_1"=stats_1, "RAW_p-value_1"=pv_1, "RAW_Qm_2"=stats_2, "RAW_p-value_2"=pv_2,"RAW_Qm_3"=stats_3, "RAW_p-value_3"=pv_3))
stats_1 <- c(); for (i in 1:10) stats_1 <- append(stats_1, Box.test(bcd[bcd$phase==1,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_1) <- 1:10
stats_2 <- c(); for (i in 1:10) stats_2 <- append(stats_2, Box.test(bcd[bcd$phase==2,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_2) <- 1:10
stats_3 <- c(); for (i in 1:10) stats_3 <- append(stats_3, Box.test(bcd[bcd$phase==3,]$dntran, lag=i, type="Ljung-Box")[[1]])
names(stats_3) <- 1:10
pv_1 <- c(); for (i in 1:10) pv_1 <- append(pv_1, Box.test(bcd[bcd$phase==1,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_1) <- 1:10
pv_2 <- c(); for (i in 1:10) pv_2 <- append(pv_2, Box.test(bcd[bcd$phase==2,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_2) <- 1:10
pv_3 <- c(); for (i in 1:10) pv_3 <- append(pv_3, Box.test(bcd[bcd$phase==3,]$dntran, lag=100, type="Ljung-Box")[[3]])
names(pv_3) <- 1:10
ljung_box_diff <- t(data.frame("DIFF_Qm_1"=stats_1, "DIFF_p-value_1"=pv_1, "DIFF_Qm_2"=stats_2, "DIFF_p-value_2"=pv_2, "DIFF_Qm_3"=stats_3, "DIFF_p-value_3"=pv_3))
write.table(rbind(ljung_box_raw,ljung_box_diff), "ntran_ljung_box_test.csv", sep=",")
w_kable_styling(kable(rbind(ljung_box_raw,ljung_box_diff), caption="Ljung-Box"))
stats_1 <- c(adf.test(bc[bc$phase==1,]$ntran)[[1]], adf.test(bcd[bcd$phase==1,]$dntran)[[1]])
names(stats_1) <- c("RAW", "DIFF")
stats_2 <- c(adf.test(bc[bc$phase==2,]$ntran)[[1]], adf.test(bcd[bcd$phase==2,]$dntran)[[1]])
names(stats_2) <- c("RAW", "DIFF")
stats_3 <- c(adf.test(bc[bc$phase==3,]$ntran)[[1]], adf.test(bcd[bcd$phase==3,]$dntran)[[1]])
names(stats_3) <- c("RAW", "DIFF")
pv_1 <- c(adf.test(bc[bc$phase==1,]$ntran)[[4]], adf.test(bcd[bcd$phase==1,]$dntran)[[4]])
names(pv_1) <- c("RAW", "DIFF")
pv_2 <- c(adf.test(bc[bc$phase==2,]$ntran)[[4]], adf.test(bcd[bcd$phase==2,]$dntran)[[4]])
names(pv_2) <- c("RAW", "DIFF")
pv_3 <- c(adf.test(bc[bc$phase==3,]$ntran)[[4]], adf.test(bcd[bcd$phase==3,]$dntran)[[4]])
names(pv_3) <- c("RAW", "DIFF")
a_dicky_fuller <- t(data.frame("DF_1"=stats_1, "p-value_1"=pv_1, "DF_2"=stats_2, "p-value_2"=pv_2, "DF_3"=stats_3, "p-value_3"=pv_3))
w_kable_styling(kable(a_dicky_fuller, caption="ADF-test"))
vm_1_aic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(3,2,7:10,12:14,16)])), p=8, type="const")
vm_1_sic <- VAR(ts(na.omit(bcd[bcd$phase==1,c(3,2,7:10,12:14,16)])), p=1, type="const")
vm_2_aic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(3,2,7:10,12:14,16)])), p=7, type="const")
vm_2_sic <- VAR(ts(na.omit(bcd[bcd$phase==2,c(3,2,7:10,12:14,16)])), p=2, type="const")
vm_3_aic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(3,2,7:10,12:14,16)])), p=8, type="const")
vm_3_sic <- VAR(ts(na.omit(bcd[bcd$phase==3,c(3,2,7:10,12:14,16)])), p=1, type="const")
names <- c("VAR(8) - ntran - 1st AIC", "VAR(1) - ntran - 2nd AIC", "VAR(7) - ntran - 3rd AIC", "VAR(2) - ntran - 1st SIC", "VAR(8) - ntran - 2nd SIC", "VAR(1) - ntran - 3rd SIC")
write("## ntranのVARモデル", file="ntran_sum.csv")
sums <- list(summary(vm_1_aic)[[2]][[1]], summary(vm_2_aic)[[2]][1], summary(vm_3_aic)[[2]][1], summary(vm_1_sic)[[2]][1], summary(vm_2_sic)[[2]][1], summary(vm_3_sic)[[2]][1])
for ( i in 1:6) {
sum_out <- capture.output(sums[i])
write("#####", append=T, file="ntran_sum.csv")
write(names[[i]], append=T, file="ntran_sum.csv")
write("Call:", append=T, file="ntran_sum.csv")
write(sum_out[[grep("^Call:", sum_out) + 1]], append=T, file="ntran_sum.csv")
write("Residuals:", append=T, file="ntran_sum.csv")
write.table(as.list(summary(sum$residuals)), append=T, file="ntran_sum.csv", sep=",", row.names=F)
write("Coefficients:", append=T, file="ntran_sum.csv")
write.table(sum$coefficients, append=T, file="ntran_sum.csv", sep=",")
write("---", append=T, file="ntran_sum.csv")
write(sum_out[[grep("^Signif. codes:", sum_out)]], append=T, file="ntran_sum.csv")
write("Multiple R-squared:", append=T, file="ntran_sum.csv")
write(sum$r.squared, append=T, file="ntran_sum.csv")
write("Adjusted R-squared:", append=T, file="ntran_sum.csv")
write(sum$adj.r.squared, append=T, file="ntran_sum.csv")
write(sum_out[grep("^F-statistic:", sum_out)], append=T, file="ntran_sum.csv")
write("#####", append=T, file="ntran_sum.csv")
}
